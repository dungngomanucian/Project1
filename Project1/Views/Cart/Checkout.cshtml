@model IEnumerable<Project1.ViewModels.CartItem>
@{
    ViewData["Title"] = "Checkout";
}
@{
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trạng Thái Đơn Hàng Pizza</title>
    <style>

        .header1 {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white;
            padding: 10px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            height: 80px;
        }

        .container {
            padding: 20px;
        }

        body {
            padding-top: 120px;
            margin: 0;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 0 15px;
        }

        h2 {
            font-size: 2.5rem;
            font-weight: bold;
            color: #FF6347;
            text-align: center;
            margin-bottom: 70000px;
        }

        /* Cấu trúc cho các bước trạng thái */
        .order-status {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .status-steps {
            list-style: none;
            display: flex;
            padding: 0;
            margin: 0;
            justify-content: space-between;
            width: 100%;
            text-align: center;
        }

        .status-step {
            position: relative;
            flex-grow: 1;
            text-align: center;
            font-size: 1.2rem;
            padding-bottom: 40px;
            transition: transform 0.3s ease-in-out;
        }

            .status-step:hover {
                transform: scale(1.1); /* Tạo hiệu ứng phóng to khi hover */
            }

        .step-number {
            display: inline-block;
            width: 70px;
            height: 70px;
            line-height: 70px;
            background-color: #FF6347; /* Màu đỏ cam cho "Đang xác nhận" */
            color: white;
            border-radius: 50%;
            font-weight: bold;
            margin-bottom: 10px;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
            font-size: 1.5rem;
            transition: background-color 0.3s;
        }

        .step-label {
            display: block;
            font-size: 1rem;
            color: #555;
            margin-top: 5px;
        }

        /* Tạo hiệu ứng cho trạng thái active */
        .status-step.active .step-number {
            background-color: #f7b731; /* Màu vàng sáng khi active (Đang xác nhận) */
        }

        .status-step.active .step-label {
            color: #f7b731;
        }

        /* Các bước đã hoàn thành */
        .status-step.completed .step-number {
            background-color: #3498db; /* Màu xanh dương cho "Đã xác nhận" */
        }

        .status-step.completed .step-label {
            color: #3498db;
        }

        /* Các bước chưa hoàn thành */
        .status-step:not(.active):not(.completed) .step-number {
            background-color: #ccc;
        }

        .status-step:not(.active):not(.completed) .step-label {
            color: #ccc;
        }

        /* Thêm đường nối giữa các bước */
        .status-step:not(:last-child)::after {
            content: '';
            position: absolute;
            top: 50%;
            right: -20px;
            width: 40px;
            height: 3px;
            background-color: #ccc;
            transform: translateY(-50%);
        }

        .status-step.active::after {
            background-color: #f7b731;
        }

        .status-step.completed::after {
            background-color: #3498db;
        }

        .status-step.last-step::after {
            display: none;
        }

        /* Thêm icon FontAwesome vào các bước trạng thái */
        .status-step[data-status="pending"] .step-number {
            content: '\f2b6'; /* Biểu tượng xác nhận đang chờ (pending) */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }

        .status-step[data-status="confirmed"] .step-number {
            content: '\f0c8'; /* Biểu tượng đã xác nhận */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }

        .status-step[data-status="preparing"] .step-number {
            content: '\f0c9'; /* Biểu tượng chuẩn bị */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }

        .status-step[data-status="shipping"] .step-number {
            content: '\f48f'; /* Biểu tượng vận chuyển */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }

        .status-step[data-status="delivered"] .step-number {
            content: '\f0e4'; /* Biểu tượng đã giao hàng */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }

        .order-status {
            margin-top: 70px;
            margin-bottom: -60px;
        }
    </style>
</head>
<body>
    <div class="header1">
        @{
            await Html.RenderPartialAsync("_PartialHeader");
        }
    </div>

    <!-- Thêm FontAwesome vào cuối trang -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
</body>
</html>

<!-- Checkout Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <!-- Chi tiết đơn hàng - Bên trên -->
        <div class="row g-5">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h4 class="mb-4 text-center">Chi Tiết Đơn Hàng</h4>
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col">Sản phẩm</th>
                                    <th scope="col">Tên</th>
                                    <th scope="col">Đơn giá</th>
                                    <th scope="col">Số lượng</th>
                                    <th scope="col">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <img src="@Url.Content("../ImagesProduct/" + item.Image)" class="img-fluid rounded" style="width: 60px; height: 60px;" alt="@item.Name">
                                        </td>
                                        <td>@item.Name</td>
                                        <td>@item.Price đ</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.ThanhTien đ</td>
                                    </tr>
                                }
                            </tbody>

                            
                        </table>
                        <div class="row mt-3">
                            <div class="col-6">
                                
                            </div>

                            <div class="col-6">
                                <div class="row">
                                    <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                        <div class="text-end text-muted m-0">Tổng tiền</div>
                                        <div id="total-price" class="text-end fw-bold" data-total-price="@Model.Sum(p => p.ThanhTien)">
                                            @(Model.Sum(p => p.ThanhTien) > 0 ? String.Format("{0:0,0 \u20AB}", Model.Sum(p => p.ThanhTien)).Replace(",", ".") : "0 \u20AB")
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                        <div class="text-end text-muted m-0">Giảm khuyến mại</div>
                                        <div id="discount-value" class="text-end fw-bold">
                                            @(ViewBag.DiscountAmount > 0 ? String.Format("{0:0,0 \u20AB}", ViewBag.DiscountAmount).Replace(",", ".") : "0 \u20AB")
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                        <div class="text-end text-muted m-0">Tổng thanh toán</div>
                                        <div id="final-price" class="text-end fw-bold">
                                            @(ViewBag.FinalPrice > 0 ? String.Format("{0:0,0 \u20AB}", ViewBag.FinalPrice).Replace(",", ".") : "0 \u20AB")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Thông tin khách hàng và phương thức thanh toán - Bên dưới -->
        <form asp-action="Checkout" asp-controller="Cart" class="mt-5">
            <div class="row g-5">
                <!-- Thông tin khách hàng -->
                <div class="col-md-12 col-lg-7 col-xl-7">
                    <div class="card shadow-sm">
                        <div class="card-body">

                            <!-- Có thể sửa đổi thông tin -->
                            <div class="form-check my-3">
                                <input type="checkbox" name="CanEdit" class="form-check-input" id="CanEdit"
                                @(ViewBag.CanEdit ? "checked" : "")>
                                <label class="form-check-label" for="CanEdit">Sửa đổi thông tin giao hàng?</label>
                            </div>

                            <!-- Người nhận hàng -->
                            <div class="form-item delivery-info">
                                <label class="form-label my-3">Người nhận hàng<sup>*</sup></label>
                                <input type="text" name="HoTen" id="HoTen" class="form-control"
                                       value="@ViewBag.HoTen" @(ViewBag.CanEdit ? "" : "readonly") required>
                            </div>

                            <!-- Địa chỉ nhận hàng -->
                            <div class="form-item delivery-info">
                                <label class="form-label my-3">Địa chỉ nhận hàng<sup>*</sup></label>
                                <input type="text" name="DiaChi" id="DiaChi" class="form-control"
                                       value="@ViewBag.DiaChi" placeholder="123 Lê Lợi, Quận 1"
                                @(ViewBag.CanEdit ? "" : "readonly") required>
                            </div>

                            <!-- Điện thoại -->
                            <div class="form-item delivery-info">
                                <label class="form-label my-3">Điện thoại<sup>*</sup></label>
                                <input type="text" name="DienThoai" id="DienThoai" class="form-control"
                                       value="@ViewBag.DienThoai" @(ViewBag.CanEdit ? "" : "readonly") required>
                            </div>

                            <!-- Ghi chú -->
                            <div class="form-item mt-3">
                                <textarea name="GhiChu" class="form-control" spellcheck="false" cols="30" rows="7" placeholder="Ghi chú cho đơn hàng"></textarea>
                            </div>

                            <!-- Nút thanh toán -->
                            @* <div class="form-group mt-4"> *@
                            @* 	<input type="submit" name="payment" class="btn btn-primary w-100 py-2" value="Đặt hàng (COD)"> *@
                            @* </div> *@

                            <div class="form-group mt-4">
                                <input type="submit" id="submitButton" name="payment" class="btn btn-primary w-100 py-2" value="Thanh toán">
                            </div>
                            <div id="paypal-button-container" class="form-item mt-3" style="max-width:1000px; display:none;"></div>
                            @* <div class="form-group mt-2">  *@
                            @* <input type="submit" name="payment" class="btn btn-success w-100 py-2"   <a asp-controller="Menu" asp-action="Index" type="button" class="btn btn-lg btn-secondary mt-2">Quay lại</a> value="Quay lại giỏ  hàng">  *@
                            @* </div>   *@
                            <a asp-controller="Cart" asp-action="Index" class="btn btn-lg btn-secondary mt-2 w-100 py-2">Quay lại giỏ hàng</a>

                        </div>
                    </div>
                </div>

                <!-- Phương thức thanh toán (Nếu cần) -->
                <div class="col-md-12 col-lg-5 col-xl-5">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h4 class="mb-3 text-center">Phương thức thanh toán</h4>
                            <!-- Thêm các phương thức thanh toán khác tại đây -->
                            <div class="form-check">
                                <input type="radio" class="form-check-input" id="COD" name="method" value="COD" checked>
                                <label class="form-check-label" for="COD">Thanh toán khi nhận hàng (COD)</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" id="VNPay" name="method" value="VNPay">
                                <label class="form-check-label" for="VNPay">Thanh toán qua VNPay</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" id="Paypal" name="method" value="Paypal">
                                <label class="form-check-label" for="Paypal">Thanh toán qua PayPal</label>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Checkout Page End -->
@section Scripts {
    <script src="https://sandbox.paypal.com/sdk/js?client-id=@ViewBag.PaypalClientId"></script>
    <script>
        document.querySelectorAll('input[name="method"]').forEach(radio => {
            radio.addEventListener('change', function () {
                const submitbutton = document.getElementById('submitButton');
                submitbutton.value = `${this.value}`;

                if (this.value === 'Paypal') {
                    submitbutton.style.display = 'none';
                    document.getElementById('paypal-button-container').style.display = 'block';
                    renderPaypalButton();  // Hàm render nút PayPal
                } else {
                    submitbutton.style.display = 'block';
                    document.getElementById('paypal-button-container').style.display = 'none';
                }
            });
        });
        function renderPaypalButton() {
            const paypalContainer = document.getElementById('paypal-button-container');
            // Làm sạch container để không tạo thêm nhiều nút PayPal
            paypalContainer.innerHTML = '';

            paypal.Buttons({
                style: {
                    layout: 'vertical',
                    color: 'silver',
                    tagline: 'false'
                },
                createOrder: (data, actions) => {
                    return fetch("/Cart/create-paypal-order", {
                        method: "POST",
                    }).then((response) => {
                        if (!response.ok) {
                            return response.json().then(error => { throw error; });
                        }
                        return response.json();
                    }).then((order) => order.id)
                        .catch(error => alert(error.message));
                },
                onApprove: (data, actions) => {
                    return fetch(`/Cart/capture-paypal-order?orderId=${data.orderID}`, {
                        method: "POST",
                    }).then((response) => {
                        if (!response.ok) {
                            return response.json().then(error => { throw error; });
                        }
                        window.location.href = "/Cart/PaymentSuccess";  // Chuyển hướng sau khi thanh toán thành công
                    }).catch(error => alert(error.message));
                }
            }).render('#paypal-button-container');
        }
        document.addEventListener("DOMContentLoaded", function () {
            const canEditCheckbox = document.getElementById("CanEdit");
            const fields = ["HoTen", "DiaChi", "DienThoai"].map(id => document.getElementById(id));

            // Hàm để bật/tắt trạng thái readonly của các trường input
            function toggleFieldsState() {
                const isEditable = canEditCheckbox.checked;
                fields.forEach(field => {
                    field.readOnly = !isEditable;
                });
            }
            // Cập nhật trạng thái khi trang được load
            toggleFieldsState();
            // Gắn sự kiện thay đổi trạng thái checkbox
            canEditCheckbox.addEventListener("change", toggleFieldsState);
        });
    </script>
}