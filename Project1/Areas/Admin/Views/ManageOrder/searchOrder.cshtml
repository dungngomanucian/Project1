@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Project1.Models;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<TOrder>

@{
    ViewData["Title"] = "ListProduct";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin1.cshtml";
}

<div class="content-wrapper">
    <div style="width: 100%; text-align: center;"> <h1>Đơn hàng đã hoàn thành</h1> </div>
    <br />
    <div class="row">
        <div class="col-lg-8 ">
        </div>
        <div class="col-lg-4">
            <div class="input-group" style="margin-right: 10px; text-align: right;">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="search">
                        <i class="mdi mdi-magnify"></i>
                    </span>
                </div>
                <input id="searchInput" type="text" class="form-control" placeholder="Tìm kiếm hoá đơn theo mã hoá đơn."
                       aria-label="search" aria-describedby="search">
                <button id="searchButton" type="button" class="btn btn-inverse-secondary btn-sm">Tìm kiếm</button>
            </div>
        </div>

        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive pt-3">
                        <table class="table table-striped ">
                            <thead>
                                <tr>
                                    <th width="80px" height="10px" style="text-align: left; vertical-align: middle; padding-left: 10px; ">
                                        Mã đơn hàng
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px; ">
                                        Trạng thái
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px; ">
                                        Ngày đặt
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px;">
                                        Tạo bởi
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px; ">
                                        Xác nhận bởi
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px; ">
                                        Phương thức thanh toán
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px;">
                                        Tổng tiền
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px;">
                                        Đánh giá từ người dùng
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px;">
                                        Ghi chú
                                    </th>
                                    <th width="80px" style="text-align: left; vertical-align: middle; padding-left: 10px;">

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.OrderId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Status.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreatedDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreatedBy)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Manager.Nickname)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PaymentMethod.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TotalPrice)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CustomerFeeling)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Note)
                                        </td>
                                        <td>
                                            <a asp-action="" asp-route-order="">Sửa</a> |

                                            <a asp-action="" asp-route-productId="">Xoá</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @if (!string.IsNullOrEmpty(ViewBag.NoResult as string))
                        {
                            <div class="alert alert-warning">
                                @ViewBag.NoResult
                            </div>
                        }

                        <!-- Thông báo nếu nhập sai định dạng -->
                        @if (!string.IsNullOrEmpty(ViewBag.saidinhdang as string))
                        {
                            <div class="alert alert-danger">
                                @ViewBag.saidinhdang
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>
        <div class=" col-12 mt-3 .pagination btn-group me-2 " role="group" aria-label="First group">
            @Html.PagedListPager(Model,
                     page => Url.Action("searchOrder", new { page = page }),
                     new PagedListRenderOptions
            {
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link", "btn", "btn-info" }
            })

        </div>


    </div>
    
</div>





<script>
    //mở rộng nút thêm mới
    document.querySelector('.btn-icon').addEventListener('mouseover', function () {
        this.style.width = '200px';
        this.querySelector('span').style.visibility = 'visible';
    });

    document.querySelector('.btn-icon').addEventListener('mouseout', function () {
        this.style.width = '50px';
        this.querySelector('span').style.visibility = 'hidden';
    });
</script>


<script>
    // Hàm xử lý sự kiện tìm kiếm
    function handleSearch() {
        const searchKeyword = document.getElementById('searchInput').value.trim();
        if (searchKeyword) {
            const page = 1; // Mặc định trang đầu tiên
            const url = `searchOrder?page=${page}&search_Keyword=${encodeURIComponent(searchKeyword)}`;
            // Điều hướng đến action searchProduct
            window.location.href = url;
        } else {
            alert("Vui lòng nhập từ khóa để tìm kiếm!");
        }
    }

    // Xử lý sự kiện click nút "Tìm kiếm"
    document.getElementById('searchButton').addEventListener('click', handleSearch);

    // Xử lý sự kiện nhấn Enter trong ô input
    document.getElementById('searchInput').addEventListener('keydown', function (e) {
        if (e.key === 'Enter') {
            handleSearch();
        }
    });
</script>